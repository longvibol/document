*** Share Context for other component *** 

Ctrl + space ( import automationc ) ដាក់នៅខាងចុងកន្លែងដែលយើងចង់ប្រើ

1. useContext in order to share the value to other component 
2. create Security Folder then carate AuthContext.js 
3. Step by Step setup : crate children in the value of the component -> in the main App.js 

ex: 
------------------------------------------------
export default function TodoApp(){
    return(
        <div className="TodoApp">      

            <AuthProvider>
                <BrowserRouter>
                    <HeaderComponent/>
                    <Routes>
                        <Route path="/" element={<LoginComponent/>}/>
                        <Route path="/login" element={<LoginComponent/>}/>
                        <Route path="/welcom/:username" element={<WelcomComponent/>}/>
                        <Route path="/todos" element={<ListTodosComponent/>}/>
                        <Route path="/logout" element={<LogoutComponent />}/>
                                            
                        <Route path="*" element={<ErrorComponent/>}/>

                        
                    </Routes>
                </BrowserRouter>
            </AuthProvider>        
            
        </div>
    )
}
---------------------------------------------------------------
ex: 

// 1: Crate a Context

import { createContext, useState } from "react";

export const AuthContext = createContext()

// Put some status in the context 
// share Context to other component

export default function AuthProvider({ children}){

    const [number, SetNumber] = useState(10)

    return(
        <AuthContext.Provider value={ {number} }>
            {children}
        </AuthContext.Provider>
    )
}
--------------------------------------------------------------

To export the function we use {}



return(
        <AuthContext.Provider value={{isAuthenticated, login, logout}}>
            {children}
        </AuthContext.Provider>
    )

----------------------export const AuthContext = createContext() put it in other component 
to called it : AuthContext.login()

================================== Interval Methos 

    const [number, SetNumber] = useState(10)

    // every 10s it will call the function then incrate 1 
    setInterval(()=> SetNumber(number+1),100000)

======================== to hide the link while we are not loing we setAuthentication to each component 

const [isAuthenticated, setAuthenticated] = useState(false) : Put it in Authentication. js

Ex: in header component becuae it will show in all the page :

function logout(){
        authContext.logout()
    }
    return(
        <header className="border-bottom border-light border-5 mb-5 p-2">
        <div className="container">
            <div className="row">
                <nav className="navbar navbar-expand-lg">
                    <a className="navbar-brand ms-2 fs-2 fw-bold text-black" href="https://www.in28minutes.com">in28minutes</a>
                    <div className="collapse navbar-collapse">
                        <ul className="navbar-nav">
                            <li className="nav-item fs-5">
                                {isAuthenticated &&
                                <Link className="nav-link" to="/welcom/vibol">Home</Link>}
                            </li>
                            <li className="nav-item fs-5">
                                {isAuthenticated &&
                                <Link className="nav-link" to="/todos">Todos</Link>}
                            </li>
                        </ul>
                    </div>
                    <ul className="navbar-nav">
                        <li className="nav-item fs-5">
                            {!isAuthenticated &&
                            <Link className="nav-link" to="/login">Login</Link>}
                        </li>
                        <li className="nav-item fs-5">
                            {isAuthenticated &&
                            <Link className="nav-link" to="/logout" onClick={logout}>Logout</Link>}
                        </li>
                       
                    </ul>
                </nav>
            </div>
        </div>
    </header>

    )
}

===============================================























